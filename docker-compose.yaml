version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.provider=route53"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.delayBeforeCheck=0"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email="
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.route53.hostedZoneID=${hosted_zone_id}"
      - "--ping=true"
      - "--log.level=DEBUG"
    environment:
      - ${AWS_ACCESS_KEY_ID}
      - ${AWS_SECRET_ACCESS_KEY}
      - ${AWS_REGION}
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - ./.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.jebitok.strangled.net`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.tls.certresolver=route53"
      - "traefik.http.routers.traefik.loadbalancer.server.port=8080"
      # - "traefik.http.services.traefik.middlewares=redirect-to-https@docker,redirect-to-non-www@docker"
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=https://localhost
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=development
    ports:
      - "3000:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`jebitok.strangled.net`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=route53"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.jebitok.strangled.net`) && PathPrefix(`/api`, `/docs`, `/redoc`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=route53"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    depends_on:
      - db

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
      POSTGRES_DB: app
    env_file:
      - ./backend/.env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    image: adminer:latest
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.jebitok.strangled.net`)"
      - "traefik.http.routers.adminer.entrypoints=web,websecure"
      - "traefik.http.routers.adminer.tls.certresolver=route53"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  db_data:
  letsencrypt:
