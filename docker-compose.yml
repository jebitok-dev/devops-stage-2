version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=youremail@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`proxy.jebitok.strangled.net`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-non-www.redirectregex.regex=^https://www.(.*)"
      - "traefik.http.middlewares.redirect-to-non-www.redirectregex.replacement=https://$1"
      - "traefik.http.middlewares.redirect-to-non-www.permanent=true"
      # - "traefik.http.routers.traefik.loadbalancer.server.port=8080"
      - "traefik.http.services.traefik.middlewares=redirect-to-https@docker,redirect-to-non-www@docker"
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=https://localhost
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    # command: ["npm", "run", "dev"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`jebitok.strangled.net`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.middlewares=redirect-to-https"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.jebitok.strangled.net`) && PathPrefix(`/api`, `/docs`, `/redoc`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    depends_on:
      - db

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
      POSTGRES_DB: app
    volumes:
      - db_data:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.jebitok.strangled.net`)"
      - "traefik.http.routers.adminer.entrypoints=web"
      - "traefik.http.routers.adminer.middlewares=redirect-to-https"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=myresolver"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  db_data:
  letsencrypt:
